# -*- coding: utf-8 -*-
"""HW1 CM122 s4763939 s5322197.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1py1b_5QozTgS1JnlpIbi7xEW6VsQkhAA
"""

# Exercise 1 final version

# the variable pi is set to 3.14.
pi=3.14

# x is set to equal the user's initial input.
x=str(input())

# X is defined as a string of a single space to account for any spaces inputted.
X=''

# A loop is created to remove spaces from the input and set it equal to X.
for i in x:
    if i!=' ':
        X=X+i

# num_len is initially set to zero for a loop that counts the amount of digits inputted.
num_len=0

# A loop is created to set num_len to the number of inputted digits.
for i in X:
    if i in '0123456789.':
        num_len=num_len+1
    else:
        break

# If no digits were inputted, the correct format is asked until it is provided.
if num_len==0:
    x=str(input('Wrong format. Correct format: [number] [units]. Try again: '))
    X=''
    for i in x:
        if i!=' ':
            X=X+i

    num_len=0
    for i in X:
        if i in '0123456789.':
            num_len=num_len+1
        else:
            break

# n is defined as the float type of the integers of the input by slicing the input up to num_len.
n=float(X[0:num_len])                                                           # n - number

# u is defined as the string preceding the provided number (units).
u=str(X[num_len:])                                                              # u - unit

# The radius is calculated if the input contains volumetric units.
if u=='cm**3' or u=='m**3':
    V=n                                                                         # V - volume
    r=(3*V/(4*pi))**(1/3)

# The radius is calculated if the input contains area units.
elif u=='cm**2' or u=='m**2':
    A=n                                                                         # A - area
    r=(A/(4*pi))**(1/2)

# If unrecognized units are provided, the program asks for correct units.
else:
    u=str(input('Input correct units: '))
    if u=='cm**3' or u=='m**3':
        V=n
        r=(3*V/(4*pi))**(1/3)
    elif u=='cm**2' or u=='m**2':
        A=n
        r=(A/(4*pi))**(1/2)
    else:
        u=str(input('Do not worry, it will be fine, just try one more time. Make sure you input cm**2 or cm**3 or m**2 or m**3: '))
        if u=='cm**3' or u=='m**3':
            V=n
            r=(3*V/(4*pi))**(1/3)
        elif u=='cm**2' or u=='m**2':
            A=n
            r=(A/(4*pi))**(1/2)
        else:
            print('You look tired. Maybe it is time to turn off your computer and have some personal time. Have you tried meditating? It really helps!')
            u='m'
            r='-'

# If input was provided in cm, radius is converted to meters and printed.
if 'cm' in u:
    print('Sphere radius =',r/100,'m')

# If input was provided in m, radius remains the same and printed.
else:
    print('Sphere radius =',r,'m')

# Exercise 2, list vs. string

# variables l and s are created and will be manipulated to show the difference between lists and strings.
l = ["bread","milk","eggs","flour","cheese","peanut butter"]
s = "bread, milk, eggs, flour, cheese, peanut butter"

# variable new_line will be used to create new lines in the f string when called upon.
new_line = '\n'

# An f string is used to display a large amount of text with computations and manipulations of variables.
print(
    f"List: {l}. {new_line}String: {s}. {new_line*2}"
    f"In the list, the first element (l[0]) is {l[0]}. Meanwhile, in the string, the first element (s[0]) is {s[0]}.{new_line}"
    f"If we set l[5] = \"cookies\", the last element is changed to cookies:{new_line}"
    )
l[5] = "cookies"
print(
    f"{l}{new_line*2}On the other hand, if we set s[5] = \"c\" we will get an error, since strings are immutable.{new_line*2}"
    f"If we multiple the list and string by two (i.e. l*2 and s*2), we get the following outputs:{new_line}l*2: {l*2}{new_line}s*2: {s*2}{new_line}"
    f"Lists and string are quite similar in this sense."
    )

"""Explanation: A list can store items of any type (such as stings in this case), while a string is limited to a compilation of characters where each element is only a single letter. Lists are mutable, meaning their elements can be changed, while a string is immutable and cannot be changed."""

# Exercise 2, float vs. int

# variables f and i are created and will be manipulated to show the difference between floats and integers.
f = 9.5
i = 9


# variable new_line will be used to create new lines in the f string when called upon.
new_line = '\n'

# An f string is used to display a large amount of text with computations and manipulations of variables.
print(
    f"Float: {f}{new_line}Integer: {i}{new_line*2}"
    f"If we multiply the float by 2 (f*2), we get {f*2} (Note that the variable remains a float value). On the other hand, if we divide{new_line}"
    f"the integer by 2 (i/2), we get {i/2} (Note that the integer is converted to a float value).{new_line}"
    f"If we add the float and integer (f+i), we get {f+i} (Note that the output is a float).{new_line*2}"
    )

"""Explanation: The integer variable can easily be converted to a float performing an operation that results in a non-integer answer (such as division by another number). On the other hand, a float number will remain a float type even if it is equivalent to an integer and can only be converted to an integer through the int() operation."""

# Exercise 2

# Program that checks if an inputted number is prime or not.

# a is defined as the integer type of the user's input.
a = int(input("Input an integer:"))

# l is deined as a list containing integers from 2 to (a/2)-1 rounded upwards.
# Dividing by the factor of 2 optimizes the process for large numbers
l = [*range(2,round(a/2),1)]

# x is a boolean set to equal True.
x = True

# A loop is created which checks if a is divisible by any number in l.
for i in l:
    if a % i == 0 :
        x = False
        break

# If x remains true and was not set to false by the loop, a must be prime.
if x == True:
    print("The number is prime")
# Otherwise a is not prime.
else:
    print("The number is not prime")

"""Explanation: The list is the set of numbers between 2 and a/2 using the range() function, since 'a' is prime if it is only divisible by 1 and itself. x is a boolean initially set to True, and if the loop cannot divide a by any number on the list, x remains true and the number is prime. Otherwise, if x is set to False, the number is not prime."""

# Exercise 3

# The coefficients are inputted and set to equal a, b and c as integer type.
a=int(input('a = '))
b=int(input('b = '))
c=int(input('c = '))

# if a = 0, the equation is linear and the solution is printed.
if a==0:
    x=-c/b
    print(f'There is one solution: x = {x}')

# D is set to equal the determinant
D = b**2-4*a*c

# The amount of solutions is determined by the sign of D.

# If D is positive, two solutions are calculated.
if D>0:
    x1=(-b-D**(1/2))/(2*a)
    x2=(-b+D**(1/2))/(2*a)
    print(f'There are two solutions: x_1 = {x1}, x_2 = {x2}')

# If D = 0, one solution is calculated.
elif D==0:
    x=-b/(2*a)
    print(f'There is one solution: x = {x}')

# If D is negative (the only remaining possibility), there are no real solutions.
else:
    print('There are no real solutions.')